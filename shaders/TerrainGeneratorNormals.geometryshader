//
//  TerrainGenerator.c
//  Tutorials
//
//  Created by Fabian Achammer on 10.12.15.
//
//

#version 330 core

layout(triangles) in;
layout(line_strip, max_vertices=6) out;

in vec2[] uv;
in vec3[] position_worldspace;
in vec3[] normal_cameraspace;
in vec3[] eyeDirection_cameraspace;
in vec3[] lightDirection_cameraspace;
in vec3[] position_modelspace;
in vec3[] vertex_color;
in float[] vertex_slope;
in vec3[] normal_modelspace;

out vec2 UV;
out vec3 Position_worldspace;
out vec3 Normal_cameraspace;
out vec3 EyeDirection_cameraspace;
out vec3 LightDirection_cameraspace;
out vec3 Vertex_color;
out float Vertex_slope;

uniform mat4 MVP;
uniform mat4 M;
uniform mat4 V;

void main() {
    for(int i = 0; i < 3; i++) {
        UV = uv[i];
        Position_worldspace = position_worldspace[i];
        Normal_cameraspace = normal_cameraspace[i];
        EyeDirection_cameraspace = eyeDirection_cameraspace[i];
        LightDirection_cameraspace = lightDirection_cameraspace[i];
        Vertex_color = vertex_color[i];
        Vertex_slope = vertex_slope[i];
        gl_Position = MVP * vec4(position_modelspace[i], 1);
        EmitVertex();
        
        Position_worldspace = position_worldspace[i];
        Normal_cameraspace = normal_cameraspace[i];
        EyeDirection_cameraspace = eyeDirection_cameraspace[i];
        LightDirection_cameraspace = lightDirection_cameraspace[i];
        Vertex_color = vertex_color[i];
        Vertex_slope = vertex_slope[i];
        gl_Position = MVP * vec4(position_modelspace[i] + 1 * normal_modelspace[i], 1);
        EmitVertex();
        EndPrimitive();
    }
}